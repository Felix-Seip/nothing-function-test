buildscript {
    apply from: 'dependencies.gradle'
}

plugins {
    id 'com.github.ben-manes.versions' version '0.42.0'
    id 'org.owasp.dependencycheck' version '7.1.2'
    id 'io.freefair.lombok' version '6.5.0.3'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'com.github.harbby.gradle.serviceloader' version '1.1.8'
}

apply plugin: 'java'

allprojects {

    apply plugin: 'idea'
    apply plugin: 'maven-publish'
    apply plugin: 'java'

    dependencyUpdates.resolutionStrategy = {
        componentSelection { rules ->
            rules.all { ComponentSelection selection ->
                boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm'].any { qualifier ->
                    selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
                }
                if (rejected) {
                    selection.reject('Release candidate')
                }
            }
        }
    }

    configurations.all {
        // check for updates every build
        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
    }

    group = 'com.test.function'
    archivesBaseName = 'test'
    version = '1.0'

    if (project.hasProperty('buildNumber')) {
        version += '.' + project.properties['buildNumber']
    }

    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    test {
        useJUnitPlatform()
    }

    dependencies {
        implementation 'com.nothinginvoker:sdk:1.0.12:all'
        implementation 'org.apache.commons:commons-lang3:3.12.0'

        testImplementation "org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}"
        testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}"

        testImplementation "org.hamcrest:hamcrest-all:1.3"
        testImplementation "org.mockito:mockito-core:${mockitoVersion}"

        testRuntimeOnly "org.slf4j:slf4j-simple:${slf4jVersion}"
    }

    repositories {
        mavenCentral()
        maven {
            url "https://oss.sonatype.org/content/repositories/snapshots/"
        }
        maven {
            url "s3://solutions.nothing.maven-repository.s3.eu-central-1.amazonaws.com/releases"
            credentials(AwsCredentials) {
                accessKey "AKIAYEQWESKQLPDHDCVC"
                secretKey "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"
            }
        }
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    task buildTar(type: Tar) {
        from compileJava
        from processResources
        into('lib') {
            from configurations.runtimeClasspath
        }
        archiveFileName = 'app.tar'
    }

    task fatJar(type: Jar) {
        archiveClassifier = "all"
        duplicatesStrategy "exclude"
        from {
            configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
        }
        with jar
    }

    build.dependsOn buildTar
    build.dependsOn fatJar

    artifacts {
        archives sourcesJar
    }

}
